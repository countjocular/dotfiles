set encoding=utf-8
scriptencoding utf-8

" Specify a directory for plugins
" - Avoid using standard Vim directory names like 'plugin'
call plug#begin('~/.local/share/nvim/plugged')

  Plug 'tomtom/tcomment_vim'
  Plug 'ctrlpvim/ctrlp.vim'
  Plug 'morhetz/gruvbox'
  Plug 'itchyny/lightline.vim'
  Plug 'sheerun/vim-polyglot'
  Plug 'editorconfig/editorconfig-vim'
  "Plug 'vim-syntastic/syntastic'
  Plug 'godlygeek/tabular'
  Plug 'Raimondi/delimitMate'
  Plug 'myusuf3/numbers.vim'
  Plug 'airblade/vim-gitgutter'
  Plug 'hail2u/vim-css3-syntax'
  Plug 'mhinz/vim-startify'
  Plug 'nathanaelkane/vim-indent-guides'
  Plug 'osyo-manga/vim-over'
  Plug 'tpope/vim-endwise'
  Plug 'ryanoasis/vim-devicons'
  Plug 'w0rp/ale'
  if has('nvim')
    Plug 'Shougo/deoplete.nvim', { 'do': ':UpdateRemotePlugins' }
  else
    Plug 'Shougo/deoplete.nvim'
    Plug 'roxma/nvim-yarp'
    Plug 'roxma/vim-hug-neovim-rpc'
  endif

call plug#end()

let g:mapleader = ','

" make backspaces delete sensibly
set backspace=indent,eol,start

" autosave buffer when switching
set autowrite

" sensible display of invisible characters
set list
set listchars=tab:➟\ ,eol:⤦,trail:▒,extends:>,precedes:<

" text wrapping and columns
set wrap
set textwidth=78
set colorcolumn=80

" ignore case when search pattern is all lowercase
set smartcase
set ignorecase

" Backups & Files
set backup                   " Enable creation of backup file.
set backupdir=~/.vim/backups " Where backups will go.
set directory=~/.vim/tmp     " Where temporary files will go.

""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Use netrw as file browser
""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" absolute width of netrw window
let g:netrw_winsize = -28
" tree-view
let g:netrw_liststyle = 3
" sort is affecting only: directories on the top, files below
let g:netrw_sort_sequence = '[\/]$,*'
" open file in a new tab
let g:netrw_browse_split = 3

""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" gruvbox
""""""""""""""""""""""""""""""""""""""""""""""""""""""""
colorscheme gruvbox
set background=dark

""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Lightline
""""""""""""""""""""""""""""""""""""""""""""""""""""""""
let g:lightline = { 'colorscheme': 'gruvbox', }
set laststatus=2
set noshowmode

""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Syntastic
""""""""""""""""""""""""""""""""""""""""""""""""""""""""
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*
let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0

""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" vim-indent-guides
""""""""""""""""""""""""""""""""""""""""""""""""""""""""
set shiftwidth=2 et
let g:indent_guides_start_level = 1
let g:indent_guides_auto_colors = 0
let g:indent_guides_enable_on_vim_startup = 1
autocmd VimEnter,Colorscheme * :hi IndentGuidesOdd  ctermbg=233
autocmd VimEnter,Colorscheme * :hi IndentGuidesEven ctermbg=237

""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Deoplete
""""""""""""""""""""""""""""""""""""""""""""""""""""""""
let g:deoplete#enable_at_startup = 1
set completeopt+=noinsert

""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Leader C for code-related mappings
""""""""""""""""""""""""""""""""""""""""""""""""""""""""
noremap <silent> <Leader>cc :TComment<CR>
vnoremap <silent> <Leader>cee    :Tabularize /=<CR>
vnoremap <silent> <Leader>cet    :Tabularize /#<CR>
vnoremap <silent> <Leader>ce     :Tabularize /

""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Leader F for file-related mappîngs (open, browse...) 
""""""""""""""""""""""""""""""""""""""""""""""""""""""""
nnoremap <silent> <Leader>f :CtrlP<CR>
nnoremap <silent> <Leader>fm :CtrlPMRU<CR>

""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Leader B for buffer-related mappings
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""
nnoremap <silent> <Leader>b :CtrlPBuffer<CR> " cycle between buffer
nnoremap <silent> <Leader>bb :bn<CR> "create (N)ew buffer
nnoremap <silent> <Leader>bd :bdelete<CR> "(D)elete the current buffer
nnoremap <silent> <Leader>bu :bunload<CR> "(U)nload the current buffer
nnoremap <silent> <Leader>bl :setnomodifiable<CR> " (L)ock the current buffer"

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Other mappings
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" reloads .vimrc -- making all changes active
if has('nvim')
  map <silent> <Leader>v :source ~/.config/nvim/init.vim<CR> :PlugInstall<CR>:bdelete<CR>:exe ":echo 'init.vim reloaded'"<CR>
else
  map <silent> <Leader>v :source ~/.vimrc<CR>:PlugInstall<CR>:bdelete<CR>:exe ":echo 'vimrc reloaded'"<CR>
end
" use 'jj' to escape insert mode
inoremap jj <ESC>
" Make spacebar act as :
nnoremap <Space> :
" Set movement keys to jkl; instead of hjkl
noremap ; l
noremap l j
noremap k k
noremap j h
" use ':w!!' to allow sudo write, if current buffer doesn't have permission
cmap w!! %!sudo tee > /dev/null %
" Paste without automatic indentation
set pastetoggle=<F2>
